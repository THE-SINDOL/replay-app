name: Release server
on:
  push:
    branches:
      - release
    paths:
      - python/**
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_ENV: production
  APP_ENV: production
  APPLE_ID: ${{ secrets.APPLE_ID }}
  APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
  APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
  CSC_LINK: ${{ secrets.CSC_LINK }}
  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.changes.outputs.python }}
      ui: ${{ steps.changes.outputs.ui }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
            python:
              - 'python/**'
            ui:
              - '.github/**'
              - 'electron/**'
              - 'ui/**'
              - 'server/**'
              - 'python/**'
              - 'api/**'
              - 'shared/**'
              - 'package.json'
  get-version:
    runs-on: ubuntu-latest
    outputs:
      new_release_version: ${{ steps.get-next-version.outputs.new_release_version || '' }}
    steps:
      - uses: actions/checkout@v3
      - name: Get updated package.json version
        uses: cycjimmy/semantic-release-action@v3.4.1
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_UPDATE_ONLY: true
        with:
          dry_run: true
          semantic_version: 18
          branch: release
          extra_plugins: |
            @semantic-release/commit-analyzer@^9
            @semantic-release/release-notes-generator@^10

  build-ui:
    needs: [get-version, paths-filter]
    if: needs.paths-filter.outputs.ui == 'true'
    strategy:
      matrix:
        include:
          - platform: windows
            runner: windows-runner-xl
            arch: x64
            npm_config_platform: win32
          - platform: mac
            runner: macos-latest-xl
            arch: x64
            npm_config_platform: darwin
          - platform: mac
            runner: ghcr.io/cirruslabs/macos-monterey-xcode:latest
            arch: arm64
            npm_config_platform: darwin
          - platform: linux
            runner: ubuntu-runner-xl
            arch: x64
            npm_config_platform: linux
    uses: ./.github/workflows/build-ui.yml
    with:
      runner: ${{ matrix.runner }}
      arch: ${{ matrix.arch }}
      npm_config_platform: ${{ matrix.npm_config_platform }}
      platform: ${{ matrix.platform }}
      new_release_version: ${{ needs.get-version.outputs.new_release_version }}
    secrets: inherit

  build-server:
    needs: [get-version, paths-filter]
    if: needs.paths-filter.outputs.python == 'true' || needs.paths-filter.outputs.ui == 'true'
    strategy:
      matrix:
        include:
          - platform: windows
            runner: windows-runner-xl
            arch: x64
            npm_config_platform: win32
          - platform: mac
            runner: macos-latest-xl
            arch: x64
            npm_config_platform: darwin
          - platform: mac
            runner: ghcr.io/cirruslabs/macos-monterey-xcode:latest
            arch: arm64
            npm_config_platform: darwin
          - platform: linux
            runner: ubuntu-runner-xl
            arch: x64
            npm_config_platform: linux
    uses: ./.github/workflows/build-server.yml
    with:
      runner: ${{ matrix.runner }}
      arch: ${{ matrix.arch }}
      npm_config_platform: ${{ matrix.npm_config_platform }}
      platform: ${{ matrix.platform }}
      new_release_version: ${{ needs.get-version.outputs.new_release_version }}
    secrets: inherit

  release:
    runs-on: ubuntu-latest
    needs: [build-ui, build-server]
    if: |
      always() && 
      (needs.build-ui.result == 'success' || needs.build-ui.result == 'skipped') && 
      (needs.build-server.result == 'success' || needs.build-server.result == 'skipped') && 
      !(needs.build-ui.result == 'skipped' && needs.build-server.result == 'skipped')
    steps:
      - uses: actions/checkout@v3
      - name: Get all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Deduplicate artifacts
        run: |
          cd artifacts
          declare -A seen
          while IFS= read -r -d $'\0' file; do
            fname=$(basename "$file")
            if [[ -e "${seen[$fname]}" ]]; then
              echo "Duplicate: $file"
              rm -f "$file"
            else
              seen[$fname]="$file"
            fi
          done < <(find . -type f -print0)
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3.4.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 18
          branch: release
          extra_plugins: |
            @semantic-release/commit-analyzer@^9
            @semantic-release/release-notes-generator@^10
            @semantic-release/github@^8
